1. The running time required to push n items to the stack is O(n). This is because whenever a new node is added to the tail of the list, the previous tail needs to point to it (O(1)), and the tail pointer needs to point to the new node(O(1)). Since we have n elements, the operation would be performed n times. [ O(1) + O(1) ] * n = O(n). Therefore it requires running time O(n) to push n elements.

2. The running time required to pop the n items from the stack is O(n^2). This is because to pop one element, the pointer "curr" would have to traverse the list to find the tail and also point to the second last element. This operation alone takes O(n). However, this is only for a single element. If we have n elements, the program would have to perform this each time to pop an element (n * O(n)). Therefore this operation would have a running time of O(n^2).